{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sist_108\\\\WebstormProjects\\\\react-project_1\\\\src\\\\App3.js\";\nimport { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n/*\r\n    Vue\r\n        created() = mounted() = updated() = destoryed()\r\n    react\r\n        ComponentDidCreate()\r\n        ComponentDidMount() **** window.onload()\r\n            => useEffect()\r\n        ComponentDidUpdate()\r\n\r\n            => state가 변경될 때 화면이 변경\r\n               ------ data(){\r\n                        return {\r\n                            a:{},\r\n                            b:0\r\n                        }\r\n                      },\r\n                      methods: {\r\n                        aaa(){\r\n                            let b=100\r\n                            b=200\r\n                        }\r\n                      }\r\n\r\n                      react\r\n                      -----\r\n                      1. View에 관련된 개발 라이브러리\r\n                      2. 컴포넌트 단위로 화면이 구성\r\n                      3. 클라이언트 사이드 랜더링 (React)\r\n                            => 브라우저에서 HTML을 다시 그리는 역할만 수행\r\n                         * 서버사이드 랜더링\r\n                            => 전체를 HTML을 수행하게 만든 과정\r\n                      4. 재 랜더링 (데이터 값이 변경)\r\n\r\n                         HTML 전체 변경 / 데이타만 변경 => 속도가 빠르다\r\n                      5. 가상 돔 : 변경된 내용만 HTML에서 처리하기 위해 만든다\r\n                      6. 단방향 통신 => Redux\r\n                      \r\n                      JSX => JavaScript+XML\r\n                      XML문법\r\n                      1. 최상우 태그가 필요하다\r\n                         ---------- 한개만 존재\r\n                      2. 여는 태그와 닫는 태그 일치\r\n                         <a><b><c></b></c></a> (X)\r\n                         <a><b><c></c></b></a> (O)\r\n                         단독 태그: <br/>,<img/>,<input/>\r\n                      3. 속성값은 반드시 \"\"\r\n                         만약에 변수값 => {}\r\n                      4. 속성, 태그 => 대소문자 구분\r\n                         = 함수, 클래스는 대문자로 시작\r\n                         = HTML => 소문자로만 사용한다\r\n                      5. 변수 출력 : {}\r\n                      6. 변수의 종류\r\n                         지역변수 : let, const\r\n                         state : 변수값을 그대로 유지 (변경시에는 변경 => 값 유지)\r\n                           | 브라우저에 적용\r\n                         props : 속성값을 받는 경우 처리 => 불변\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App3() {\n  let a = 100;\n  // 이벤트 => 버튼 클릭시 처리\n  const btnPrevClick = () => {\n    a--;\n  };\n  const btnNextClick = () => {\n    a++;\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: a\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: btnPrevClick,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: btnNextClick,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_c = App3;\nexport default App3;\nvar _c;\n$RefreshReg$(_c, \"App3\");","map":{"version":3,"names":["Fragment","useState","useEffect","axios","jsxDEV","_jsxDEV","App3","a","btnPrevClick","btnNextClick","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sist_108/WebstormProjects/react-project_1/src/App3.js"],"sourcesContent":["import {Fragment,useState,useEffect} from \"react\";\r\nimport axios from \"axios\";\r\n/*\r\n    Vue\r\n        created() = mounted() = updated() = destoryed()\r\n    react\r\n        ComponentDidCreate()\r\n        ComponentDidMount() **** window.onload()\r\n            => useEffect()\r\n        ComponentDidUpdate()\r\n\r\n            => state가 변경될 때 화면이 변경\r\n               ------ data(){\r\n                        return {\r\n                            a:{},\r\n                            b:0\r\n                        }\r\n                      },\r\n                      methods: {\r\n                        aaa(){\r\n                            let b=100\r\n                            b=200\r\n                        }\r\n                      }\r\n\r\n                      react\r\n                      -----\r\n                      1. View에 관련된 개발 라이브러리\r\n                      2. 컴포넌트 단위로 화면이 구성\r\n                      3. 클라이언트 사이드 랜더링 (React)\r\n                            => 브라우저에서 HTML을 다시 그리는 역할만 수행\r\n                         * 서버사이드 랜더링\r\n                            => 전체를 HTML을 수행하게 만든 과정\r\n                      4. 재 랜더링 (데이터 값이 변경)\r\n\r\n                         HTML 전체 변경 / 데이타만 변경 => 속도가 빠르다\r\n                      5. 가상 돔 : 변경된 내용만 HTML에서 처리하기 위해 만든다\r\n                      6. 단방향 통신 => Redux\r\n                      \r\n                      JSX => JavaScript+XML\r\n                      XML문법\r\n                      1. 최상우 태그가 필요하다\r\n                         ---------- 한개만 존재\r\n                      2. 여는 태그와 닫는 태그 일치\r\n                         <a><b><c></b></c></a> (X)\r\n                         <a><b><c></c></b></a> (O)\r\n                         단독 태그: <br/>,<img/>,<input/>\r\n                      3. 속성값은 반드시 \"\"\r\n                         만약에 변수값 => {}\r\n                      4. 속성, 태그 => 대소문자 구분\r\n                         = 함수, 클래스는 대문자로 시작\r\n                         = HTML => 소문자로만 사용한다\r\n                      5. 변수 출력 : {}\r\n                      6. 변수의 종류\r\n                         지역변수 : let, const\r\n                         state : 변수값을 그대로 유지 (변경시에는 변경 => 값 유지)\r\n                           | 브라우저에 적용\r\n                         props : 속성값을 받는 경우 처리 => 불변\r\n */\r\nfunction App3(){\r\n    let a=100\r\n    // 이벤트 => 버튼 클릭시 처리\r\n    const btnPrevClick=()=>{\r\n        a--\r\n    }\r\n    const btnNextClick=()=>{\r\n        a++\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <h1>{a}</h1>\r\n            <button onClick={btnPrevClick}>-</button>\r\n            <button onClick={btnNextClick}>+</button>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default App3"],"mappings":";AAAA,SAAQA,QAAQ,EAACC,QAAQ,EAACC,SAAS,QAAO,OAAO;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxDA,SAAAC,MAAA,IAAAC,OAAA;AAyDA,SAASC,IAAIA,CAAA,EAAE;EACX,IAAIC,CAAC,GAAC,GAAG;EACT;EACA,MAAMC,YAAY,GAACA,CAAA,KAAI;IACnBD,CAAC,EAAE;EACP,CAAC;EACD,MAAME,YAAY,GAACA,CAAA,KAAI;IACnBF,CAAC,EAAE;EACP,CAAC;EACD,oBACIF,OAAA,CAACL,QAAQ;IAAAU,QAAA,gBACLL,OAAA;MAAAK,QAAA,EAAKH;IAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACZT,OAAA;MAAQU,OAAO,EAAEP,YAAa;MAAAE,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzCT,OAAA;MAAQU,OAAO,EAAEN,YAAa;MAAAC,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEnB;AAACE,EAAA,GAhBQV,IAAI;AAiBb,eAAeA,IAAI;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}